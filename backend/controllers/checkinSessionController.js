const CheckinSession = require("../models/CheckinSession");

// ‡πÄ‡∏õ‡∏¥‡∏î session ‡πÉ‡∏´‡∏°‡πà
exports.openSession = async (req, res) => {
  try {
    const { classId, openAt, closeAt, withTeacherFace } = req.body;
    const session = await CheckinSession.create({
      classId,
      openAt,
      closeAt,
      withTeacherFace,
    });
    res.status(201).json({ message: "‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß", session });
  } catch (err) {
    res.status(500).json({ message: "‚ùå ‡πÄ‡∏õ‡∏¥‡∏î session ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", error: err.message });
  }
};

// ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å session
exports.cancelSession = async (req, res) => {
  try {
    const { id } = req.params;
    const session = await CheckinSession.findById(id);
    if (!session) return res.status(404).json({ message: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö session" });

    session.status = "cancelled";
    await session.save();
    res.json({ message: "üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å session ‡πÅ‡∏•‡πâ‡∏ß" });
  } catch (err) {
    res.status(500).json({ message: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", error: err.message });
  }
};

// ‡∏î‡∏∂‡∏á session ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö admin)
exports.getActiveSessions = async (req, res) => {
  try {
    const now = new Date();
    const sessions = await CheckinSession.find({
      status: "active",
      openAt: { $lte: now },
      closeAt: { $gte: now },
    }).populate("classId", "courseName section");

    res.json(sessions);
  } catch (err) {
    res.status(500).json({ message: "‚ùå ‡πÇ‡∏´‡∏•‡∏î session ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", error: err.message });
  }
};

// üîç ‡∏î‡∏∂‡∏á session ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡πÜ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö student ‡πÉ‡∏ä‡πâ classId)
exports.getActiveSessionByClass = async (req, res) => {
  try {
    const { classId } = req.params;
    const now = new Date();

    const session = await CheckinSession.findOne({
      classId,
      status: "active",
      openAt: { $lte: now },
      closeAt: { $gte: now },
    });

    if (!session) return res.status(404).json({ message: "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ session ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà" });

    res.json(session);
  } catch (error) {
    res.status(500).json({ message: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î session", error: error.message });
  }
};
